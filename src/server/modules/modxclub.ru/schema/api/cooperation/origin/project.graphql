

type ProjectResponse{
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Project
}

input ProjectCreateInput {
  name: String!
  description: String
  url: String
  # Members: ProjectMemberCreateManyWithoutProjectInput
  # Tasks: TaskCreateManyWithoutProjectInput
}

input ProjectUpdateInput {
  name: String
  description: String
  url: String
  # Members: ProjectMemberCreateManyWithoutProjectInput
  # Tasks: TaskCreateManyWithoutProjectInput
}


input ProjectCreateOneWithoutTasksInput {
  connect: ProjectWhereUniqueInput
}

input ProjectCreateOneInput {
  connect: ProjectWhereUniqueInput
}

input ProjectUpdateOneInput {
  connect: ProjectWhereUniqueInput
}

input  ProjectUpdateOneWithoutTasksInput {
  connect: ProjectWhereUniqueInput
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project 
}